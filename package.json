{
	"name": "irule",
	"displayName": "F5 Networks iRules",
	"description": "F5 Networks iRules Extension",
	"publisher": "bitwisecook",
	"version": "1.5.9",
	"keywords": [
		"f5",
		"f5networks",
		"irule",
		"irules",
		"remote development",
		"remote",
		"bigip",
		"big-ip"
	],
	"engines": {
		"vscode": "^1.35.0"
	},
	"bugs": {
		"url": "https://github.com/bitwisecook/vscode-iRule/issues"
	},
	"license": "SEE LICENSE IN LICENSE.txt",
	"icon": "images/f5.png",
	"galleryBanner": {
		"color": "#DCDCDC",
		"theme": "light"
	},
	"homepage": "https://github.com/bitwisecook/vscode-iRule/blob/master/README.md",
	"repository": {
		"type": "git",
		"url": "https://github.com/bitwisecook/vscode-iRule.git"
	},
	"categories": [
		"Formatters",
		"Other",
		"Programming Languages",
		"Snippets"
	],
	"activationEvents": [
		"onLanguage:irule-lang",
		"*"
	],
	"main": "./out/extension.js",
	"contributes": {
		"configuration": [
			{
				"title": "iRules",
				"properties": {
					"conf.irule-lang.diag.whenprio.enable": {
						"type": "boolean",
						"default": true,
						"description": "Enable/disable code diagnostic for 'when missing priority' diagnostic.",
						"scope": "workspace"
					},
					"conf.irule-lang.diag.doublesubst.enable": {
						"type": "boolean",
						"default": true,
						"description": "Enable/disable code diagnostic for 'double substition' diagnostic.",
						"scope": "workspace"
					},
					"conf.irule-lang.diag.arginject.enable": {
						"type": "boolean",
						"default": true,
						"description": "Enable/disable code diagnostic for 'argument injection' diagnostic.",
						"scope": "workspace"
					},
					"conf.icrfs.bigip": {
						"type": "object",
						"default": {
							"hostname": "",
							"username": "",
							"password": "",
							"validateCert": false
						},
						"description": "The connection details for the BIG-IP",
						"scope": "workspace"
					}
				}
			}
		],
		"commands": [
			{
				"command": "icrfs.workspaceInit",
				"title": "Setup Workspace",
				"category": "IcrFS"
			},
			{
				"command": "icrfs.init",
				"title": "Connect and fetch iRules",
				"category": "IcrFS"
			},
			{
				"command": "icrfs.reset",
				"title": "Delete Files",
				"category": "IcrFS"
			},
			{
				"command": "icrfs.deleteFile",
				"title": "Delete \"file.txt\"",
				"category": "IcrFS"
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "icrfs.init",
					"when": "workbenchState == workspace"
				},
				{
					"command": "icrfs.reset",
					"when": "workbenchState == workspace"
				},
				{
					"command": "icrfs.deleteFile",
					"when": "workbenchState == workspace"
				},
				{
					"command": "icrfs.workspaceInit",
					"when": "workbenchState != workspace"
				}
			]
		},
		"languages": [
			{
				"id": "irule-lang",
				"aliases": [
					"irule",
					"iRule"
				],
				"extensions": [
					".irul",
					".irule",
					".tcl"
				],
				"configuration": "./language-configuration.json"
			}
		],
		"grammars": [
			{
				"language": "irule-lang",
				"scopeName": "source.irule",
				"path": "./out/syntaxes/irule.tmLanguage"
			}
		],
		"snippets": [
			{
				"language": "irule-lang",
				"path": "./snippets/snippets.json"
			},
			{
				"language": "irule-lang",
				"path": "./snippets/iRuleSnippets.json"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./ && node out/build.js",
		"watch": "tsc -watch -p ./",
		"postinstall": "node ./node_modules/vscode/bin/install",
		"test": "npm run compile && node ./node_modules/vscode/bin/test"
	},
	"devDependencies": {
		"@types/chai": "^4.2.4",
		"@types/mocha": "^2.2.48",
		"@types/node": "^10.17.5",
		"chai": "^4.2.0",
		"converter": "0.0.5",
		"mocha": "^6.2.2",
		"nyc": "^14.1.1",
		"ts-node": "^8.4.1",
		"tslint": "^5.20.1",
		"typescript": "^3.7.2",
		"vscode": "^1.1.36"
	},
	"dependencies": {
		"@types/request": "^2.48.2",
		"fetch": "^1.1.0"
	}
}